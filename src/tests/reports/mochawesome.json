{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2018-03-07T15:40:39.681Z",
    "end": "2018-03-07T15:40:47.736Z",
    "duration": 8055,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b6604de2-b3c0-417c-b0b6-1e81064db175",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "b5860e31-6222-4364-82bb-85fbca76a2f9",
        "title": "GET /users/:userId",
        "fullFile": "/Users/ekell2/Projects/core/ob-core-node-example-microservice/tests/component/supertest/user-get.spec.js",
        "file": "/tests/component/supertest/user-get.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 400 for invalid request",
            "fullTitle": "GET /users/:userId should return 400 for invalid request",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users/1')\n  .expect(400)\n  .end((error) => {\n    expect(error).to.be.an('null');\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "f5f5712a-ab8e-475c-8630-659f02676bed",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the correct response if downstream system returns response",
            "fullTitle": "GET /users/:userId should return the correct response if downstream system returns response",
            "timedOut": false,
            "duration": 7019,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users/1')\n  .set('x-lbg-txn-correlation-id', '12345')\n  .set('x-lbg-brand', 'LYDS')\n  .set('x-lbg-channel', 'RC')\n  .expect(200)\n  .end((error, response) => {\n    expect(error).to.be.an('null');\n    expect(response.body).to.deep.equal(expectedResponse);\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "de885f7e-4f79-4b24-9512-72869b4dab2b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the correct response if downstream system returns error",
            "fullTitle": "GET /users/:userId should return the correct response if downstream system returns error",
            "timedOut": false,
            "duration": 163,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users/2')\n  .set('x-lbg-txn-correlation-id', '12345')\n  .set('x-lbg-brand', 'LYDS')\n  .set('x-lbg-channel', 'RC')\n  .expect(400)\n  .end((error, response) => {\n    expect(error).to.be.an('null');\n    expect(response.body).to.deep.equal(expectedError);\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "b740e9f9-d3d6-41cc-b970-eef0619a07b9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f5f5712a-ab8e-475c-8630-659f02676bed",
          "de885f7e-4f79-4b24-9512-72869b4dab2b",
          "b740e9f9-d3d6-41cc-b970-eef0619a07b9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 7218,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      },
      {
        "uuid": "aff85651-b320-46c8-85ba-09f08fdbd382",
        "title": "GET /users",
        "fullFile": "/Users/ekell2/Projects/core/ob-core-node-example-microservice/tests/component/supertest/user-list.spec.js",
        "file": "/tests/component/supertest/user-list.spec.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return 400 for incorrect request",
            "fullTitle": "GET /users should return 400 for incorrect request",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users')\n  .expect(400)\n  .end((error) => {\n    expect(error).to.be.an('null');\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "999aab46-7915-41b8-8375-154b977c8830",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the correct response if downstream system returns response",
            "fullTitle": "GET /users should return the correct response if downstream system returns response",
            "timedOut": false,
            "duration": 367,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users')\n  .set('x-lbg-txn-correlation-id', '12345')\n  .set('x-lbg-brand', 'LYDS')\n  .set('x-lbg-channel', 'RC')\n  .expect(200)\n  .end((error, response) => {\n    expect(error).to.be.an('null');\n    expect(response.body).to.deep.equal(expectedResponse);\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "1da8c532-2629-4297-8799-fb3c654ac36e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return the correct response if downstream system returns error",
            "fullTitle": "GET /users should return the correct response if downstream system returns error",
            "timedOut": false,
            "duration": 271,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest(server)\n  .get('/node-example-microservice/v1.0/users')\n  .set('x-lbg-txn-correlation-id', '12345')\n  .set('x-lbg-brand', 'LYDS')\n  .set('x-lbg-channel', 'BB')\n  .expect(400)\n  .end((error, response) => {\n    expect(error).to.be.an('null');\n    expect(response.body).to.deep.equal(expectedError);\n    return done();\n  });",
            "err": {},
            "isRoot": false,
            "uuid": "389f403a-bb4a-42a9-839e-442548790cf9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "999aab46-7915-41b8-8375-154b977c8830",
          "1da8c532-2629-4297-8799-fb3c654ac36e",
          "389f403a-bb4a-42a9-839e-442548790cf9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 641,
        "root": false,
        "rootEmpty": false,
        "_timeout": 100000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 100000
  },
  "copyrightYear": 2018
}